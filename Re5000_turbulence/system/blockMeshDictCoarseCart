/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  7
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 0.1;

vertices
(
 (0.5 0 -0.5)
 (0.353553 0.353553 -0.5)
 (1 0 -0.5)
 (1 1 -0.5)
 (10 1 -0.5)
 (10 2 -0.5)
 (0 1 -0.5)
 (0 0.5 -0.5)
 
 (-0.5 0 -0.5)
 (-1 0 -0.5)
 (-1 1 -0.5)
 (-2 1 -0.5)
 (-0.353553 0.353553 -0.5)
 (-2 2 -0.5)

 (0.5 0 0.5)
 (0.353553 0.353553 0.5)
 (1 0 0.5)
 (1 1 0.5)
 (10 1 0.5)
 (10 2 0.5)
 (0 1 0.5)
 (0 0.5 0.5)
 
 (-0.5 0 0.5)
 (-1 0 0.5)
 (-1 1 0.5)
 (-2 1 0.5)
 (-0.353553 0.353553 0.5)
 (-2 2 0.5)

 (0.353553 -0.353553 -0.5)
 (10 -1 -0.5)
 (10 -2 -0.5)
 (0 -1 -0.5)
 (0 -0.5 -0.5)

 (-0.353553 -0.353553 -0.5)
 (-2 -2 -0.5)
 (-2 -1 -0.5)

 (0.353553 -0.353553 0.5)
 (10 -1 0.5)
 (10 -2 0.5)
 (0 -1 0.5)
 (0 -0.5 0.5)

 (-0.353553 -0.353553 0.5)
 (-2 -2 0.5)
 (-2 -1 0.5)

 (1 -1 -0.5)
 (-1 -1 -0.5)

 (1 -1 0.5)
 (-1 -1 0.5)

 (10 0 -0.5)
 (-2 0 -0.5)

 (10 0 0.5)
 (-2 0 0.5)

);

blocks
(
 hex (1 3 6 7 15 17 20 21) (14 14 1) simpleGrading (10 1 1)
 hex (0 2 3 1 14 16 17 15) (14 14 1) simpleGrading (10 1 1)
 hex (28 44 2 0 36 46 16 14) (14 14 1) simpleGrading (10 1 1)
 hex (32 31 44 28 40 39 46 36) (14 14 1) simpleGrading (10 1 1)
 hex (33 45 31 32 41 47 39 40) (14 14 1) simpleGrading (10 1 1)
 hex (8 9 45 33 22 23 47 41) (14 14 1) simpleGrading (10 1 1)
 hex (12 10 9 8 26 24 23 22) (14 14 1) simpleGrading (10 1 1)
 hex (7 6 10 12 21 20 24 26) (14 14 1) simpleGrading (10 1 1)
 
 hex (44 29 48 2 46 37 50 16) (126 14 1) simpleGrading (1 1 1)
 hex (2 48 4 3 16 50 18 17) (126 14 1) simpleGrading (1 1 1)  
 hex (11 4 5 13 25 18 19 27) (168 14 1) simpleGrading (1 1 1)
 hex (35 45 9 49 43 47 23 51) (14 14 1) simpleGrading (1 1 1)
 hex (49 9 10 11 51 23 24 25) (14 14 1) simpleGrading (1 1 1)
 hex (34 30 29 35 42 38 37 43) (168 14 1) simpleGrading (1 1 1)
);

edges
(
 arc 0 1 (0.469846 0.17101 -0.5)   
 arc 1 7 (0.17101 0.469846 -0.5)  
 arc 14 15 (0.469846 0.17101 0.5)  
 arc 15 21 (0.17101 0.469846 0.5)  
 arc 8 12 (-0.469846 0.17101 -0.5)
 arc 12 7 (-0.17101 0.469846 -0.5)
 arc 22 26 (-0.469846 0.17101 0.5) 
 arc 26 21 (-0.17101 0.469846 0.5) 
 
 arc 0 28 (0.469846 -0.17101 -0.5) 
 arc 28 32 (0.17101 -0.469846 -0.5)
 arc 14 36 (0.469846 -0.17101 0.5) 
 arc 36 40 (0.17101 -0.469846 0.5) 
 arc 8 33 (-0.469846 -0.17101 -0.5)
 arc 33 32 (-0.17101 -0.469846 -0.5)
 arc 22 41 (-0.469846 -0.17101 0.5)
 arc 41 40 (-0.17101 -0.469846 0.5)
);

boundary
(
 up
 {
   type symmetryPlane;
   faces
     (
      (5 13 27 19)
     );
 }
 
 down
 {
   type symmetryPlane;
   faces
     (
      (34 30 38 42)
     );
 }

 left
 {
   type patch;
   faces
     (
      (25 27 13 11)
      (51 25 11 49)
      (43 51 49 35)
      (42 43 35 34)
     );
 }

 right
 {
   type patch;
   faces
     (
      (4 5 19 18)
      (48 4 18 50)
      (29 48 50 37)
      (30 29 37 38)
     );
 }

 cylinder
 {
   type wall;
   faces
     (
      (1 7 21 15)
      (0 1 15 14)
      (28 0 14 36)
      (32 28 36 40)
      (33 32 40 41)
      (8 33 41 22)
      (12 8 22 26)
      (7 12 26 21)
     );
 }

 frontAndBack
 {
   type empty;
   faces
     (
      (1 7 6 3)
      (15 17 20 21)
      (0 1 3 2)
      (14 16 17 15)
      (28 0 2 44)
      (36 46 16 14)
      (32 28 44 31)
      (40 39 46 36)
      (33 32 31 45)
      (41 47 39 40)
      (8 33 45 9)
      (22 23 47 41)
      (12 8 9 10)
      (26 24 23 22)
      (7 12 10 6)
      (21 20 24 26)

      (2 3 4 48)
      (16 50 18 17)
      (44 2 48 29)
      (46 37 50 16)
      (11 13 5 4)
      (25 18 19 27)
      (49 11 10 9)
      (51 23 24 25)
      (35 49 9 45)
      (43 47 23 51)
      (34 35 29 30)
      (42 38 37 43)
     );
 }

// one_a
// {
//   type patch;
//   faces
//     (
//      (16 2 44 46)
//      (17 3 2 16)
//     );
// }

// one_b
// {
//   type patch;
//   faces
//     (
//      (17 3 44 46)
//     );
// }

 two_a 
 {
   type patch;
   faces
     (
      (25 11 10 24)
      (24 10 6 20)
      (20 6 3 17)
      (17 3 4 18)
     );
 }


// two_c
// {
//   type patch;
//   faces
//      (20 6 3 17)
//      (17 3 4 18)
//     (
//      (24 10 6 20)
//     );
// }
//      (17 3 4 18)
      

 two_b 
 {
   type patch;
   faces
     (
      (25 11 4 18)
     );
 }

// three_a 
// {
//   type patch;
//   faces
//    (
//      (24 10 9 23)
//      (23 9 45 47)
//    );
// }

// three_b 
// {
//   type patch;
//   faces
//     (
//      (24 10 45 47)
//     );
// }

 four_a 
 {
   type patch;

   faces
     (
      (47 45 31 39)
      (39 31 44 46)
      (46 44 29 37)
      (43 35 45 47)
     );
 }

 four_b 
 {
   type patch;
   faces
     (
      (43 35 29 37)
     );
 }

);

mergePatchPairs
(
//  (one_b one_a)
  (two_b two_a)
//  (three_b three_a)
  (four_b four_a)
);
 
 
// ************************************************************************* //

